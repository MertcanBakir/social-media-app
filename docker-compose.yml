services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    platform: linux/amd64
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    platform: linux/amd64
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:15
    platform: linux/amd64
    restart: always
    ports:
      - "5433:5432" # dışarıya 5433 olarak açılıyor
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7362170Mm.
    volumes:
    - pgdata:/var/lib/postgresql/data
    
  auth-service:
    build: .
    command: ["auth-service", "6000"]
    ports:
      - "6000:6000"
    volumes:
      - .:/app
      - ./apps/auth-service/.env:/app/apps/auth-service/.env
    working_dir: /app
    env_file:
      - ./apps/auth-service/.env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:9092
      - DATABASE_URL=postgresql://postgres:7362170Mm.@postgres:5432/social_app_auth_db

  user-service:
    build: .
    command: ["user-service", "6001"]
    ports:
      - "6001:6001"
    volumes:
      - .:/app
      - ./apps/user-service/.env:/app/apps/user-service/.env
    working_dir: /app
    env_file:
      - ./apps/user-service/.env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:9092
      - DATABASE_URL=postgresql://postgres:7362170Mm.@postgres:5432/social_app_user_db

  follow-service:
    build: .
    command: ["follow-service", "6003"]
    ports:
      - "6003:6003"
    volumes:
      - .:/app
      - ./apps/follow-service/.env:/app/apps/follow-service/.env
    working_dir: /app
    env_file:
      - ./apps/follow-service/.env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:9092
      - DATABASE_URL=postgresql://postgres:7362170Mm.@postgres:5432/social_app_follow_db

  tweet-service:
    build: .
    command: ["tweet-service", "6002"]
    ports:
      - "6002:6002"
    volumes:
      - .:/app
      - ./apps/tweet-service/.env:/app/apps/tweet-service/.env
    working_dir: /app
    env_file:
      - ./apps/tweet-service/.env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:9092
      - DATABASE_URL=postgresql://postgres:7362170Mm.@postgres:5432/social_app_tweet_db
      
  like-service:
    build: .
    command: ["like-service", "6004"]
    ports:
      - "6004:6004"
    volumes:
      - .:/app
      - ./apps/like-service/.env:/app/apps/like-service/.env
    working_dir: /app
    env_file:
      - ./apps/like-service/.env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:9092
      - DATABASE_URL=postgresql://postgres:7362170Mm.@postgres:5432/social_app_like_db
      
  api-gateway:
    build: .
    command: ["api-gateway"]
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - auth-service
      - user-service
      - follow-service
      - tweet-service
      - like-service
    environment:
      - NODE_ENV=development

volumes:
  pgdata: